{"ast":null,"code":"var _jsxFileName = \"/home/sal/devfest2025/DevFest25/client/src/Pages/signin.jsx\",\n  _s = $RefreshSig$();\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signin() {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col min-h-screen p-6 bg-gray-100 items-left\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: '',\n        password: ''\n      },\n      onSubmit: async (values, {\n        setSubmitting,\n        setStatus\n      }) => {\n        try {\n          const response = await axios.post('http://localhost:3000/login', {\n            username: values.username,\n            password: values.password\n          });\n          if (response.data.success) {\n            // Login successful\n            alert('Login successful!');\n            // You can store the user data or token in localStorage if needed\n            localStorage.setItem('user', JSON.stringify(response.data.user));\n            // Redirect to home page or dashboard\n            navigate('/dashboard');\n          }\n        } catch (error) {\n          var _error$response, _error$response$data;\n          console.error('Login error:', error);\n          setStatus({\n            error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Invalid username or password'\n          });\n        } finally {\n          setSubmitting(false);\n        }\n      },\n      validate: values => {\n        const errors = {};\n        if (!values.username) {\n          errors.username = \"Required\";\n        }\n        if (!values.password) {\n          errors.password = \"Required\";\n        }\n        return errors;\n      },\n      children: ({\n        isSubmitting,\n        isValid,\n        dirty,\n        status\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"form\",\n          children: [status && status.error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message text-red-500 mb-4\",\n            children: status.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field py-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              className: \"block text-gray-700 font-semibold mb-2\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"username\",\n              placeholder: \"Enter Username\",\n              className: \"w-xs px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\",\n              component: \"div\",\n              className: \"error-message text-red-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field pb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"block text-gray-700 font-semibold mb-2\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter password\",\n              className: \"w-xs px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"error-message text-red-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting || !isValid || !dirty,\n            className: \"inline-block rounded px-4 py-3 text-white font-bold transition-colors bg-blue-600 hover:bg-primary-700 active:bg-primary-800 disabled:cursor-not-allowed disabled:bg-red-300\",\n            children: isSubmitting ? 'Signing in...' : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_s(Signin, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","axios","useNavigate","jsxDEV","_jsxDEV","Signin","_s","navigate","className","children","initialValues","username","password","onSubmit","values","setSubmitting","setStatus","response","post","data","success","alert","localStorage","setItem","JSON","stringify","user","error","_error$response","_error$response$data","console","message","validate","errors","isSubmitting","isValid","dirty","status","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","placeholder","component","disabled","_c","$RefreshReg$"],"sources":["/home/sal/devfest2025/DevFest25/client/src/Pages/signin.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Signin() {\n    const navigate = useNavigate();\n\n    return (\n        <div className=\"flex flex-col min-h-screen p-6 bg-gray-100 items-left\">\n            <Formik\n                initialValues={{ username: '', password: '' }}\n                onSubmit={async (values, { setSubmitting, setStatus }) => {\n                    try {\n                        const response = await axios.post('http://localhost:3000/login', {\n                            username: values.username,\n                            password: values.password\n                        });\n\n                        if (response.data.success) {\n                            // Login successful\n                            alert('Login successful!');\n                            // You can store the user data or token in localStorage if needed\n                            localStorage.setItem('user', JSON.stringify(response.data.user));\n                            // Redirect to home page or dashboard\n                            navigate('/dashboard');\n                        }\n                    } catch (error) {\n                        console.error('Login error:', error);\n                        setStatus({\n                            error: error.response?.data?.message || 'Invalid username or password'\n                        });\n                    } finally {\n                        setSubmitting(false);\n                    }\n                }}\n                validate={(values) => {\n                    const errors = {};\n                    if (!values.username) {\n                        errors.username = \"Required\";\n                    }\n                    if (!values.password) {\n                        errors.password = \"Required\";\n                    }\n                    return errors;\n                }}\n            >\n                {({ isSubmitting, isValid, dirty, status }) => (\n                    <div className=\"form-container\">\n                        <Form className=\"form\">\n                            {status && status.error && (\n                                <div className=\"error-message text-red-500 mb-4\">\n                                    {status.error}\n                                </div>\n                            )}\n                            <div className=\"form-field py-6\">\n                                <label htmlFor=\"username\" className=\"block text-gray-700 font-semibold mb-2\">\n                                    Username\n                                </label>\n                                <Field\n                                    type=\"text\"\n                                    name=\"username\"\n                                    placeholder=\"Enter Username\"\n                                    className=\"w-xs px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                                />\n                                <ErrorMessage name=\"username\" component=\"div\" className=\"error-message text-red-500\" />\n                            </div>\n                            <div className=\"form-field pb-6\">\n                                <label htmlFor=\"password\" className=\"block text-gray-700 font-semibold mb-2\">\n                                    Password\n                                </label>\n                                <Field\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"Enter password\"\n                                    className=\"w-xs px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                                />\n                                <ErrorMessage name=\"password\" component=\"div\" className=\"error-message text-red-500\" />\n                            </div>\n                            <button\n                                type=\"submit\"\n                                disabled={isSubmitting || !isValid || !dirty}\n                                className=\"inline-block rounded px-4 py-3 text-white font-bold transition-colors bg-blue-600 hover:bg-primary-700 active:bg-primary-800 disabled:cursor-not-allowed disabled:bg-red-300\"\n                            >\n                                {isSubmitting ? 'Signing in...' : 'Sign In'}\n                            </button>\n                        </Form>\n                    </div>\n                )}\n            </Formik>\n        </div>\n    );\n}\n\nexport default Signin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}