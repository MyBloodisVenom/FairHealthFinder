{"ast":null,"code":"var _jsxFileName = \"/Users/nikash/DevFestFinal/DevFest25/client/src/components/ProtectedRoute.jsx\";\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  // Check if user is logged in by looking for user data in localStorage\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (!user) {\n    // Redirect to login if not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/signin\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","user","JSON","parse","localStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nikash/DevFestFinal/DevFest25/client/src/components/ProtectedRoute.jsx"],"sourcesContent":["import { Navigate } from 'react-router-dom';\n\nconst ProtectedRoute = ({ children }) => {\n    // Check if user is logged in by looking for user data in localStorage\n    const user = JSON.parse(localStorage.getItem('user'));\n    \n    if (!user) {\n        // Redirect to login if not authenticated\n        return <Navigate to=\"/signin\" replace />;\n    }\n\n    return children;\n};\n\nexport default ProtectedRoute; "],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACrC;EACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAErD,IAAI,CAACJ,IAAI,EAAE;IACP;IACA,oBAAOH,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC,SAAS;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5C;EAEA,OAAOX,QAAQ;AACnB,CAAC;AAACY,EAAA,GAVIb,cAAc;AAYpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}